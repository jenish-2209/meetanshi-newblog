{"version":3,"file":"component---src-templates-author-detail-js-383d767d747fbd6ea2c5.js","mappings":"2JAWA,IARe,IAEX,8BACE,yBAAG,MAAQ,IAAIA,MAAOC,cAAc,kC,+CC+B1C,IAlCe,IAEX,0BAAQC,UAAU,kCAChB,uBAAKA,UAAU,wBACb,uBAAKA,UAAU,aACb,uBAAKA,UAAU,MAAMC,MAAO,CAAEC,MAAO,OAAQC,QAAQ,SACnD,uBAAKH,UAAU,YACb,gBAAC,KAAI,CAACI,GAAG,KAEP,uBACEC,IAAI,mBACJC,IAAI,YACJL,MAAO,CAAEC,MAAO,QAASK,OAAQ,OAAQC,aAAc,SAI7D,uBAAKR,UAAU,WAAWC,MAAO,CAACQ,UAAW,UAC3C,wBAAMC,OAAO,UAAUC,OAAO,OAC5B,yBACEC,KAAK,OACLC,KAAK,QACLC,YAAY,sBACZC,UAAQ,IAEV,0BAAQH,KAAK,UAAS,e,0EC8ItC,UApKqB,IAA4B,IAA3B,KAAEI,EAAI,YAAEC,GAAa,EACzC,MAAMC,EAAQF,EAAKG,UAAUC,MACvBC,EAASL,EAAKM,QACd,WAAEC,EAAU,YAAEC,EAAW,SAAEC,GAAaR,EAsC9C,OACE,2BACE,gBAAC,IAAM,MACP,uBAAKjB,UAAU,aACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,aAEb,uBAAKA,UAAU,mCACZqB,EAAOK,QAAUL,EAAOK,OAAOC,KAC9B,uBACEtB,IAAKgB,EAAOK,OAAOC,IACnBrB,IAAKe,EAAOR,KACZb,UAAU,iBAGd,0BAAKqB,EAAOR,MACZ,yBAAIQ,EAAOO,iBAMnB,uBAAK5B,UAAU,sCAEb,uBAAKA,UAAU,OACZkB,EAAMW,KAAKC,IACV,OACE,uBACEC,IAAKD,EAAKE,GACVhC,UAAU,2CAEV,0BACE,gBAAC,KAAI,CAACI,GAAE,IAAM0B,EAAKG,MAChBH,EAAKI,QAGV,uBAAKC,wBAAyB,CAAEC,OAAQN,EAAKO,QAAQC,QAAQ,yCAA0C,OACvG,uBAAKtC,UAAU,qBAEf,4BACE,gBAAC,KAAI,CAACI,GAAE,WAAa0B,EAAKT,OAAOkB,KAAKN,MAASH,EAAKT,OAAOkB,KAAK1B,OAElE,4BACG,OAxDG2B,EAwDeV,EAAKU,KAtD/B,IAAI1C,KAAK0C,GAAMC,mBAAmB,QADzB,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,cAyD5C,4BACG,MArDeC,KAC5B,MACMC,EAAaD,EAAQE,MAAM,KAAKC,OAEtC,OADaC,KAAKC,KAAKJ,EAFA,IAGZ,EAiDSK,CAAqBrB,EAAKO,SAAS,eA3DvCG,KA8DF,MAMd,uBAAKxC,UAAU,4CACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,aAEb,uBAAKA,UAAU,cA9FH,MACpB,MAAMoD,EAAc,GAGpB,IAAK,IAAIC,EAAI,EAAGA,GAAK5B,EAAU4B,IAErB,IAANA,GACAA,IAAM5B,GACN4B,IAAM7B,GACL6B,GAAK7B,EAPI,GAOmB6B,GAAK7B,EAPxB,EASV4B,EAAYE,KAAKD,GACRA,IAAM7B,EAVL,EAU2B,GAAK6B,IAAM7B,EAVtC,EAU4D,GAEtE4B,EAAYE,KAAK,OAIrB,OAAOF,CAAW,EA6EPG,GAAgB1B,KAAI,CAAC2B,EAAMC,IACb,QAATD,EACK,wBAAMzB,IAAK0B,EAAOzD,UAAU,iBAAgB,OAGnD,gBAAC,KAAI,CACH+B,IAAKyB,EACLpD,GACW,IAAToD,EAAU,WACKjC,EAAU,eACVA,EAAU,IAAIiC,EAE/BxD,UAAS,gBAAiBwB,IAAgBgC,EAAO,SAAW,KAE3DA,SASf,gBAAC,IAAM,MACH,C","sources":["webpack://gatsby-starter-hello-world/./src/components/Footer.js","webpack://gatsby-starter-hello-world/./src/components/Header.js","webpack://gatsby-starter-hello-world/./src/templates/author-detail.js"],"sourcesContent":["// src/components/Footer.js\nimport React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>&copy; {new Date().getFullYear()} My Blog. All rights reserved.</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Header = () => {\n  return (\n    <header className=\"site-header site-header-custom\">\n      <nav className=\"navbar navbar-custom\">\n        <div className=\"container\">\n          <div className=\"row\" style={{ width: \"100%\", display:\"flex\"}}>\n            <div className=\"col-md-6\">\n              <Link to=\"/\">\n                {/* Use the static logo image URL here */}\n                <img\n                  src=\"/images/logo.svg\"// Replace with the actual path to your static logo\n                  alt=\"Site Logo\"\n                  style={{ width: \"250px\", height: \"auto\", marginBottom: \"0\" }}\n                />\n              </Link>\n            </div>\n            <div className=\"col-md-6\" style={{textAlign: 'right'}}>\n              <form action=\"/search\" method=\"GET\">\n                <input\n                  type=\"text\"\n                  name=\"query\"\n                  placeholder=\"Search for posts...\"\n                  required\n                />\n                <button type=\"submit\">Search</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;","import React from \"react\";\nimport Header from \"../components/Header\";\nimport { graphql, Link } from \"gatsby\";\nimport Footer from \"../components/Footer\";\n\nconst AuthorDetail = ({ data, pageContext }) => {\n  const posts = data.allWpPost.nodes;\n  const author = data.wpUser; // Author details from GraphQL\n  const { authorSlug, currentPage, numPages } = pageContext;\n\n  // Helper function to create pagination with ellipses\n  const getPagination = () => {\n    const pageNumbers = [];\n    const delta = 1; // Number of pages to show around the current page\n\n    for (let i = 1; i <= numPages; i++) {\n      if (\n        i === 1 || // First page\n        i === numPages || // Last page\n        i === currentPage || // Current page\n        (i >= currentPage - delta && i <= currentPage + delta) // Pages around current page\n      ) {\n        pageNumbers.push(i);\n      } else if (i === currentPage - delta - 1 || i === currentPage + delta + 1) {\n        // Add ellipsis between distant pages\n        pageNumbers.push(\"...\");\n      }\n    }\n\n    return pageNumbers;\n  };\n\n  // Function to format date\n  const formatDate = (date) => {\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\n    return new Date(date).toLocaleDateString('en-US', options);\n  };\n\n    // Helper function to calculate reading time\n    const calculateReadingTime = (content) => {\n      const wordsPerMinute = 200; // Average reading speed\n      const textLength = content.split(' ').length;\n      const time = Math.ceil(textLength / wordsPerMinute);\n      return time;\n    };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            {/* Author Details */}\n            <div className=\"author-details text-center mb-4\">\n              {author.avatar && author.avatar.url && (\n                <img\n                  src={author.avatar.url}\n                  alt={author.name}\n                  className=\"author-image\"\n                />\n              )}\n              <h2>{author.name}</h2>\n              <p>{author.description}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container blog-list-main-container\">\n        {/* Post List */}\n        <div className=\"row\">\n          {posts.map((post) => {\n            return (\n              <div\n                key={post.id}\n                className=\"col-md-6 mb-4 blog-list-content-wrapper\"\n              >\n                <h3>\n                  <Link to={`/${post.slug}`}>\n                    {post.title}\n                  </Link>\n                </h3>\n                <div dangerouslySetInnerHTML={{ __html: post.excerpt.replace(/<a[^>]*class=\"read-more\"[^>]*>.*?<\\/a>/, \"\") }} />\n                <div className=\"listing-blog-info\">\n                \n                <span>\n                  <Link to={`/author/${post.author.node.slug}`}>{post.author.node.name}</Link>\n                </span>\n                <span>\n                  {\" | \"}{formatDate(post.date)}\n                </span>\n                <span>\n                  {\" | \"}{calculateReadingTime(post.excerpt)} min read\n                </span>\n              </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"container blog-pagination-main-container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            {/* Pagination with Ellipsis */}\n            <div className=\"pagination\">\n              {getPagination().map((page, index) => {\n                if (page === \"...\") {\n                  return <span key={index} className=\"page-ellipsis\">...</span>;\n                }\n                return (\n                  <Link\n                    key={page}\n                    to={\n                      page === 1\n                        ? `/author/${authorSlug}/`\n                        : `/author/${authorSlug}/${page}`\n                    }\n                    className={`page-number ${currentPage === page ? \"active\" : \"\"}`}\n                  >\n                    {page}\n                  </Link>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query ($authorSlug: String!, $skip: Int!, $limit: Int!) {\n    wpUser(slug: { eq: $authorSlug }) {\n      name\n      avatar {\n        url\n      }\n      description\n    }\n    allWpPost(\n      filter: { author: { node: { slug: { eq: $authorSlug } } } }\n      sort: { fields: date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        id\n        title\n        slug\n        excerpt\n        date\n        author {\n          node {\n            name\n            slug\n            avatar {\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default AuthorDetail;\n"],"names":["Date","getFullYear","className","style","width","display","to","src","alt","height","marginBottom","textAlign","action","method","type","name","placeholder","required","data","pageContext","posts","allWpPost","nodes","author","wpUser","authorSlug","currentPage","numPages","avatar","url","description","map","post","key","id","slug","title","dangerouslySetInnerHTML","__html","excerpt","replace","node","date","toLocaleDateString","year","month","day","content","textLength","split","length","Math","ceil","calculateReadingTime","pageNumbers","i","push","getPagination","page","index"],"sourceRoot":""}