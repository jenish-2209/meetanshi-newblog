{"version":3,"file":"component---src-templates-index-js-5a56637e117e6e155f81.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/Footer.js","webpack://gatsby-starter-hello-world/./src/components/Header.js","webpack://gatsby-starter-hello-world/./src/components/Hero.js","webpack://gatsby-starter-hello-world/./src/templates/index.js"],"sourcesContent":["// src/components/Footer.js\nimport React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>&copy; {new Date().getFullYear()} My Blog. All rights reserved.</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Header = () => {\n  return (\n    <header className=\"site-header site-header-custom\">\n      <nav className=\"navbar navbar-custom\">\n        <div className=\"container\">\n          <div className=\"row\" style={{ width: \"100%\", display:\"flex\"}}>\n            <div className=\"col-md-6\">\n              <Link to=\"/\">\n                {/* Use the static logo image URL here */}\n                <img\n                  src=\"/images/logo.svg\"// Replace with the actual path to your static logo\n                  alt=\"Site Logo\"\n                  style={{ width: \"250px\", height: \"auto\", marginBottom: \"0\" }}\n                />\n              </Link>\n            </div>\n            <div className=\"col-md-6\" style={{textAlign: 'right'}}>\n              <form action=\"/search\" method=\"GET\">\n                <input\n                  type=\"text\"\n                  name=\"query\"\n                  placeholder=\"Search for posts...\"\n                  required\n                />\n                <button type=\"submit\">Search</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;","// src/components/Hero.js\nimport React from \"react\";\n\nconst Hero = () => {\n  return (\n    <section>\n      <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n                <div className=\"home-hero-section\">\n                  <h1>Get Better at E-commerce & Marketing</h1>\n                  <p>Find expert articles on Magento, Shopify, and Digital Marketing topics</p>\n                </div>\n            </div>\n          </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Header from \"../components/Header\";\nimport Hero from \"../components/Hero\";\nimport Footer from \"../components/Footer\";\n\nconst Home = ({ data, pageContext }) => {\n  const posts = data?.allWpPost?.nodes || [];\n  const { currentPage, numPages } = pageContext;\n\n  const categories = data.allWpCategory.nodes;\n\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage === 2 ? `/` : `/page/${currentPage - 1}`;\n  const nextPage = `/page/${currentPage + 1}`;\n\n  const calculateReadingTime = (content) => {\n    const wordsPerMinute = 200; // Average reading speed\n    const textLength = content.split(' ').length;\n    const time = Math.ceil(textLength / wordsPerMinute);\n    return time;\n  };\n\n  return (\n    <main>\n      <Header />\n      <Hero />\n\n{/* Categories List */}\n<div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <ul className=\"category-list-hero list-inline text-center\">\n              <li className=\"list-inline-item\">\n                <Link to=\"/\" className=\"btn btn-category-link active\">All</Link>\n              </li>\n              {categories\n                .filter(category => category.name !== \"Uncategorized\")\n                .map(category => (\n                  <li key={category.id} className=\"list-inline-item\">\n                    <Link to={`/category/${category.slug}/`} className=\"btn btn-category-link\">\n                      {category.name}\n                    </Link>\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container blog-list-main-container\">\n      <div className=\"row\">\n      {posts.length > 0 ? (\n        posts.map((post) => (\n          <div key={post.id} className=\"col-md-6 mb-4 blog-list-content-wrapper\">\n            <h3>\n              <Link to={`/${post.slug}`}>{post.title}</Link>\n            </h3>\n            <div dangerouslySetInnerHTML={{ __html: post.excerpt.replace(/<a[^>]*class=\"read-more\"[^>]*>.*?<\\/a>/, \"\") }} />\n            <div className=\"listing-blog-info\">\n                    <span>\n                      By <Link to={`/author/${post.author.node.slug}`}>{post.author.node.name}</Link>\n                    </span>\n                    <span>\n                      {\" | \"}{post.date} \n                    </span>\n                    <span>\n                      {\" | \"}{calculateReadingTime(post.excerpt)} min read\n                    </span>\n                  </div>\n          </div>\n        ))\n      ) : (\n        <p>No posts found.</p>\n      )}\n      </div>\n      </div>\n\n      <div className=\"container blog-pagination-main-container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"pagination\">\n      {/* Pagination */}\n      {numPages > 1 && (\n        <div style={{ marginTop: \"20px\" }}>\n          {!isFirst && (\n            <Link to={prevPage} style={{ marginRight: \"10px\" }}>\n              ← Previous\n            </Link>\n          )}\n\n          {Array.from({ length: numPages }, (_, i) => (\n            <Link\n              key={i}\n              to={i === 0 ? `/` : `/page/${i + 1}`}\n              style={{\n                marginRight: \"10px\",\n                textDecoration: \"none\",\n                color: currentPage === i + 1 ? \"red\" : \"black\",\n              }}\n            >\n              {i + 1}\n            </Link>\n          ))}\n\n          {!isLast && (\n            <Link to={nextPage} style={{ marginLeft: \"10px\" }}>\n              Next →\n            </Link>\n          )}\n        </div>\n      )}\n       </div>\n      </div>\n      </div>\n      </div>\n      <Footer />\n    </main>\n  );\n};\n\nexport const query = graphql`\n  query HomeQuery($skip: Int!, $limit: Int!) {\n    allWpPost(sort: { date: DESC }, skip: $skip, limit: $limit) {\n      nodes {\n        id\n        slug\n        title\n        excerpt\n        date(formatString: \"MMMM DD, YYYY\")\n        author {\n          node {\n            name\n            slug\n            avatar {\n              url\n            }\n          }\n        }\n      }\n    }\n    allWpCategory {\n      nodes {\n        id\n        name\n        slug\n      }\n    }\n  }\n`;\n\nexport default Home;\n"],"names":["Date","getFullYear","className","style","width","display","to","src","alt","height","marginBottom","textAlign","action","method","type","name","placeholder","required","data","pageContext","posts","allWpPost","nodes","currentPage","numPages","categories","allWpCategory","isFirst","isLast","prevPage","nextPage","Header","filter","category","map","key","id","slug","length","post","title","dangerouslySetInnerHTML","__html","excerpt","replace","author","node","date","content","textLength","split","Math","ceil","calculateReadingTime","marginTop","marginRight","Array","from","_","i","textDecoration","color","marginLeft","Footer"],"sourceRoot":""}